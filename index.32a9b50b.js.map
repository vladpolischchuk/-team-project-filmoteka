{"mappings":"AACI,MAAMA,EAAO,CACTC,aAAcC,SAASC,iBAAiB,0BACxCC,cAAeF,SAASG,cAAc,2BACtCC,MAAOJ,SAASG,cAAc,sBAQhC,SAASE,IACPP,EAAKM,MAAME,UAAUC,OAAO,Y,CAN9BT,EAAKC,aAAaS,SAAQC,IACxBA,EAAEC,iBAAiB,QAASL,EAAY,IAE1CP,EAAKI,cAAcQ,iBAAiB,QAASL,GAOjDL,SAASU,iBAAiB,WAAW,SAASD,GAC5B,WAAVA,EAAEE,KACNN,G,ICbNO,eAAeC,EAAcC,EAAK,GAC9B,aACIC,MAAM,iGAAiDD,KACtDE,MAAMC,IACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAMK,GACIA,EAAKC,UAEfC,OAAOC,IACJC,QAAQD,MAAM,sDAAuDA,EAAM,G,CCjBvF,MAAME,EAAO,CACTC,UAAW3B,SAASG,cAAc,WDuBtCS,iBACI,aACIG,MAAM,0FACLC,MAAMC,IACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAMK,GACIA,EAAKO,SAEfL,OAAOC,IACJC,QAAQD,MAAM,sDAAuDA,EAAM,G,EC9BvF,GAAiBR,MAAKY,IAClBf,EAHS,GAGWG,MAAKK,IACrB,IAAIQ,EAMZ,SAA0BR,EAAMS,GAC5B,GAAoB,IAAhBT,EAAKU,OACL,OAEJ,OAAOV,EAAKW,KAAI,EACZC,MACIA,EAAKC,YACLA,EAAWC,aACXA,EAAYC,UACZA,MAGJ,IAAIC,EAAUF,EAAaG,MAAM,EAAG,GAChCV,EAAS,GACb,IAAK,IAAIW,KAAYH,EAAW,CAC5B,IAAII,EAAQV,EAAaW,MAAK,EAACC,GAACA,KAAQA,IAAOH,IAC/CX,EAAOe,KAAKH,EAAMI,K,CAMtB,OAJIhB,EAAOG,QAAU,IACjBH,EAAS,CAACA,EAAO,GAAIA,EAAO,GAAI,UAG7B,0HAEgCM,WAAqBD,kCACxCA,qEAJHL,EAAOiB,KAAK,yEAOwBR,kCAGvD,IACCQ,KAAK,G,CAtCSC,CAAiBzB,EAAMO,GACpCF,EAAKC,UAAUoB,mBAAmB,YAAalB,EAAO,GACxD","sources":["src/js/modal-film.js","src/js/film-api.js","src/js/trending-films-render.js"],"sourcesContent":["\n    const refs = {\n        openModalBtn: document.querySelectorAll('[data-film-modal-open]'),\n        closeModalBtn: document.querySelector('[data-film-modal-close]'),\n        modal: document.querySelector('[data-film-modal]'),\n      };\n    \n      refs.openModalBtn.forEach(e => {\n        e.addEventListener('click', toggleModal)\n      });\n      refs.closeModalBtn.addEventListener('click', toggleModal);\n    \n      function toggleModal() {\n        refs.modal.classList.toggle('is-hidden');\n      }\n    ;\n  \n  document.addEventListener('keydown', function(e) {\n      if (e.key === 'Escape') {\n      toggleModal()\n      }\n      });","const URL = 'https://api.themoviedb.org/3';\nconst KEY = 'cf961b1b89f4c4a28558be2b04fdd59a';\n\n//EXPORT  FUNCTIONS\nexport { fetchFilmsAPI, fetchGenresAPI, fetchMovieInfoAPI, fetchFilmsSearch};\n// FETCH FOR MOVIE OF THE DAY\nasync function fetchFilmsAPI(page=1) {\n    return await\n        fetch(`${URL}/trending/movie/day?api_key=${KEY}&page=${page}`)\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error('Network response was not OK');\n            }\n            return response.json();\n        })\n        .then((data) => {\n            return data.results;\n        })\n        .catch((error) => {\n            console.error('There has been a problem with your fetch operation:', error);\n        });\n}\n//FUNCTION CALL\n//fetchFilmsAPI();\n\n// FETCH FOR GENRE\nasync function fetchGenresAPI() {\n    return await\n        fetch(`${URL}/genre/movie/list?api_key=${KEY}`)\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error('Network response was not OK');\n            }\n            return response.json();\n        })\n        .then((data) => {\n            return data.genres;\n        })\n        .catch((error) => {\n            console.error('There has been a problem with your fetch operation:', error);\n        });\n}\n//FUNCTION CALL\n//fetchGenresAPI();\n\n// FETCH FOR MOVIE INFO\nasync function fetchMovieInfoAPI(movie_id) {\n    return await\n        fetch(`${URL}/movie/${movie_id}?api_key=${KEY}`)\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error('Network response was not OK');\n            }\n            return response.json();\n        })\n        .then((data) => {\n            return data;\n        })\n        .catch((error) => {\n            console.error('There has been a problem with your fetch operation:', error);\n        });\n}\n//FUNCTION CALL\n//fetchMovieInfoAPI(8);\n// ============= FETCH FOR SEARCH FILMS =================\n\nasync function fetchFilmsSearch(searchQuery,page) {\n    return await\n        fetch(`${URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${page}&include_adult=folse`)\n        .then((response) => {\n            if (!response.ok) {\n\n                throw new Error('Network response was not OK');\n            }\n            return response.json();\n        })\n        .then((data) => {\n          return data.results\n        })\n        .catch((error) => {\n            console.error(\"error:\", error);\n        });\n};","import {fetchFilmsAPI, fetchGenresAPI} from './film-api';\n\nconst refs = {\n    movieList: document.querySelector('.home'),\n}\n\nconst basicImgURL = 'https://image.tmdb.org/t/p/w500';\nconst page = 1;\n\nfetchGenresAPI().then(genres => {\n    fetchFilmsAPI(page).then(data => {\n        let markup = createCardMarkup(data, genres);\n        refs.movieList.insertAdjacentHTML('beforeend', markup);\n    });\n});\n\n\nfunction createCardMarkup(data, genres_names) {\n    if (data.length === 0) {\n        return;\n    }\n    return data.map((\n        {\n            title,\n            poster_path,\n            release_date,\n            genre_ids,\n        }\n    ) => {\n        let release = release_date.slice(0, 4);\n        let genres = [];\n        for (let genre_id of genre_ids) {\n            let genre = genres_names.find(({id}) => id === genre_id);\n            genres.push(genre.name);\n        }\n        if (genres.length >= 3) {\n            genres = [genres[0], genres[1], 'Other'];\n        }\n        let genres_str = genres.join(', ');\n        return `<li class=\"card\">\n  <a href=\"\" class=\"card-link link\">\n    <img class=\"card-img\" src=\"${basicImgURL}${poster_path}\" alt=\"${title}\">\n    <h3 class=\"card-name\">${title}</h3>\n    <div class=\"card-item\">\n      <p class=\"card-genres\">${genres_str}</p>\n      <p class=\"card-year\"><span class=\"card-line\">|</span>${release}</p>\n    </div>\n  </a>\n</li>`;\n    }).join('');\n}"],"names":["$b89ac968f8ae7162$var$refs","openModalBtn","document","querySelectorAll","closeModalBtn","querySelector","modal","$b89ac968f8ae7162$var$toggleModal","classList","toggle","forEach","e","addEventListener","key","async","$629b97ab68d79279$export$58cfb20200ee5426","page","fetch","then","response","ok","Error","json","data","results","catch","error","console","$60abd5603c95c844$var$refs","movieList","genres","markup","genres_names","length","map","title","poster_path","release_date","genre_ids","release","slice","genre_id","genre","find","id","push","name","join","$60abd5603c95c844$var$createCardMarkup","insertAdjacentHTML"],"version":3,"file":"index.32a9b50b.js.map"}