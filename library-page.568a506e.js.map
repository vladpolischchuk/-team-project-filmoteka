{"mappings":"oeAAA,MAAMA,EAAmB,KACrB,IAAIC,EAAgB,KACpB,IACIA,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kB,CAClD,MACE,M,CAEJ,OAAOJ,CAAa,EAGlBK,EAAiB,KACnB,IAAIC,EAAc,KAClB,IACIA,EAAcL,KAAKC,MAAMC,aAAaC,QAAQ,gB,CAChD,MACE,M,CAEJ,OAAOE,CAAW,EChBtB,IAAAC,EAAAC,EAAA,SAWA,MAEMC,EAAUC,SAASC,cAAc,YACjCC,EAAaF,SAASC,cAAc,8BACpCE,EAAWH,SAASC,cAAc,2BAClCG,EAAUJ,SAASC,cAAc,YAEvC,IAAII,EAAgBhB,IAChBiB,EAAcX,IAkBlB,SAASY,EAAcC,GACnBC,QAAQC,IAAIF,GACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,GAAK,EACxCF,QAAQC,IAAIF,EAAOG,KACf,EAAAd,EAAAgB,mBAAkBL,EAAOG,IAAIG,MAAKC,IAE9BhB,EAAQiB,mBAAmB,YAAaC,EAAuBF,GAAM,G,CAtBjFN,QAAQC,IAAIL,GAGU,MAAjBA,GAAkD,IAAzBA,EAAcO,QACxB,MAAfN,GAA8C,IAAvBA,EAAYM,OAI7BP,EAAcO,OAAS,GAC9BV,EAAWgB,UAAUC,IAAI,aACzBZ,EAAcF,IACPC,EAAYM,OAAS,IAC5BT,EAASe,UAAUC,IAAI,aACvBZ,EAAcD,KAPdF,EAAQgB,UAAY,2HACpBrB,EAAQqB,UAAY,IAuDxB,SAASC,IACLtB,EAAQqB,UAAY,E,CAGxB,SAASH,EAAuBF,GAE9B,GADEN,QAAQC,IAAIK,KACQ,MAAjBV,GAAkD,IAAzBA,EAAcO,QAC5B,MAAfN,GAA8C,IAAvBA,EAAYM,QAClC,OAEA,MAAMU,GACFA,EAAEC,MACFA,EAAKC,SACLA,EAAQC,YACRA,EAAWC,aACXA,EAAYC,OACZA,EAAMC,eACNA,EAAcC,WACdA,EAAUC,aACVA,EAAYC,WACZA,GAEEhB,EAKJ,MAAO,2EAEkCO,sEACAG,WAAqBF,kCACxCA,qEANFR,EAAKY,OAAOK,KAAIC,GAAWA,EAAQC,OAAMC,KAAK,yEASXT,0C,CAO7DxB,EAAWkC,iBAAiB,SA5EDC,IACvBlC,EAASe,UAAUoB,OAAO,aAC1BpC,EAAWgB,UAAUC,IAAI,aACzBE,IAEAhB,EAAgBhB,IAEK,MAAjBgB,GAAkD,IAAzBA,EAAcO,QACvCR,EAAQgB,UAAY,iIACpBrB,EAAQqB,UAAY,IACbf,EAAcO,OAAS,IAC9Bb,EAAQqB,UAAY,GACpBhB,EAAQgB,UAAY,GACpBb,EAAcF,G,IAgEtBF,EAASiC,iBAAiB,SA3DDC,IACrBlC,EAASe,UAAUC,IAAI,aACvBjB,EAAWgB,UAAUoB,OAAO,aAC5BjB,IAEAf,EAAcX,IAEK,MAAfW,GAA8C,IAAvBA,EAAYM,QACnCR,EAAQgB,UAAY,+HACpBrB,EAAQqB,UAAY,IACbd,EAAYM,OAAS,IAC5Bb,EAAQqB,UAAY,GACpBhB,EAAQgB,UAAY,GACpBb,EAAcD,G","sources":["src/js/library/from-local-storage-info.js","src/js/library/my-library.js"],"sourcesContent":["const isMovieInWatched = () => {\n    let watchedMovies = null;\n    try {\n        watchedMovies = JSON.parse(localStorage.getItem('Watched movies'));\n    } catch {\n        return;\n    }\n    return watchedMovies;\n}\n\nconst isMovieInQueue = () => {\n    let queueMovies = null;\n    try {\n        queueMovies = JSON.parse(localStorage.getItem('Queue movies'));\n    } catch {\n        return;\n    }\n    return queueMovies;\n}\n\nexport { isMovieInWatched, isMovieInQueue };","\nimport {\n    fetchFilmsAPI,\n    fetchMoreFilmsAPI,\n    fetchMoreGenresAPI,\n    fetchGenresAPI,\n    fetchMovieInfoAPI,\n    fetchFilmsSearch,\n  } from '../film-api';\n\nimport { isMovieInWatched, isMovieInQueue } from './from-local-storage-info';\n\nconst IF_LIBRARY_EMPTY_IMG = '<image class=\"message-image\" src=\"https://i.imgur.com/Ud8xgso.gif\"/>';\n\nconst library = document.querySelector('.library');\nconst watchedBtn = document.querySelector('.button-container__watched');\nconst queueBtn = document.querySelector('.button-container__queu');\nconst message = document.querySelector('.message');\n\nlet watchedMovies = isMovieInWatched();\nlet queueMovies = isMovieInQueue();\n\nconsole.log(watchedMovies)\n\nif (\n    (watchedMovies == null || watchedMovies.length === 0) &&\n    (queueMovies == null || queueMovies.length === 0)\n) {\n    message.innerHTML = `<p class=\"message-text\">You library is empty yet</p>${IF_LIBRARY_EMPTY_IMG}`;\n    library.innerHTML = '';\n} else if (watchedMovies.length > 0) {\n    watchedBtn.classList.add('is-active');\n    renderLibrary(watchedMovies);\n} else if (queueMovies.length > 0) {\n    queueBtn.classList.add('is-active');\n    renderLibrary(queueMovies);\n}\n\nfunction renderLibrary(movies) {\n    console.log(movies)\n    for (let i = 0; i < movies.length; i += 1) {\n    console.log(movies[i])\n        fetchMovieInfoAPI(movies[i]).then(data => {\n           \n            library.insertAdjacentHTML('beforeend', createLibraryMovieItem(data));\n        })\n    }\n    }\n\nconst onWatchedBtnClick = (event) => {\n    queueBtn.classList.remove('is-active');\n    watchedBtn.classList.add('is-active');\n    clearLibrary();\n\n    watchedMovies = isMovieInWatched();\n\n    if (watchedMovies == null || watchedMovies.length === 0) {\n        message.innerHTML = `<p class=\"message-text\">Your watched list is empty yet</p>${IF_LIBRARY_EMPTY_IMG}`;\n        library.innerHTML = '';\n    } else if (watchedMovies.length > 0) {\n        library.innerHTML = '';\n        message.innerHTML = '';\n        renderLibrary(watchedMovies);\n    }\n};\n\n\nconst onQueueBtnClick = (event) => {\n    queueBtn.classList.add('is-active');\n    watchedBtn.classList.remove('is-active');\n    clearLibrary();\n\n    queueMovies = isMovieInQueue();\n\n    if (queueMovies == null || queueMovies.length === 0) {\n        message.innerHTML = `<p class=\"message-text\">Your queue list is empty yet</p>${IF_LIBRARY_EMPTY_IMG}`;\n        library.innerHTML = '';\n    } else if (queueMovies.length > 0) {\n        library.innerHTML = '';\n        message.innerHTML = '';\n        renderLibrary(queueMovies);\n    }\n};\n\nfunction clearLibrary() {\n    library.innerHTML = '';\n}\n\nfunction createLibraryMovieItem(data) {\n    console.log(data)\n  if ((watchedMovies == null || watchedMovies.length === 0) &&\n  (queueMovies == null || queueMovies.length === 0)) {\n    return;\n  } \n    const {\n        id,\n        title,\n        overview,\n        poster_path,\n        release_date,\n        genres,\n        original_title,\n        popularity,\n        vote_average,\n        vote_count,\n        \n      } = data;\n\n      const basicImgURL = 'https://image.tmdb.org/t/p/w500';\n      const genresMovie = data.genres.map(element => element.name).join(', ');\n\n      return `\n      <li class=\"card\">\n  <a href=\"\" class=\"card-link link\" data-id=\"${id}\">\n    <img class=\"card-img\" src=\"${basicImgURL}${poster_path}\" alt=\"${title}\">\n    <h3 class=\"card-name\">${title}</h3>\n    <div class=\"card-item\">\n      <p class=\"card-genres\">${genresMovie}</p>\n      <p class=\"card-year\"><span class=\"card-line\">|</span>${release_date}</p>\n    </div>\n  </a>\n</li>\n      `;\n    }\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\nqueueBtn.addEventListener('click', onQueueBtnClick);\n\n\n\n// треба описати клас is-active для кнопок"],"names":["$409ee4f54fb2d0b4$export$6f2705b68ffed592","watchedMovies","JSON","parse","localStorage","getItem","$409ee4f54fb2d0b4$export$c87fd7cccbc83cb7","queueMovies","$8sSZi","parcelRequire","$316d4e8a771c35e3$var$library","document","querySelector","$316d4e8a771c35e3$var$watchedBtn","$316d4e8a771c35e3$var$queueBtn","$316d4e8a771c35e3$var$message","$316d4e8a771c35e3$var$watchedMovies","$316d4e8a771c35e3$var$queueMovies","$316d4e8a771c35e3$var$renderLibrary","movies","console","log","i","length","fetchMovieInfoAPI","then","data","insertAdjacentHTML","$316d4e8a771c35e3$var$createLibraryMovieItem","classList","add","innerHTML","$316d4e8a771c35e3$var$clearLibrary","id","title","overview","poster_path","release_date","genres","original_title","popularity","vote_average","vote_count","map","element","name","join","addEventListener","event","remove"],"version":3,"file":"library-page.568a506e.js.map"}